Day 1: Arrays

* Set Matrix Zeroes

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        if len(matrix) == 1:
            gg = matrix[0].count(0)
            if gg > 0:
                for i in range(len(matrix[0])):
                    matrix[0][i] = 0

            return matrix

        if len(matrix[0]) == 1:
            gg = 0
            for i in range(len(matrix)):
                if matrix[i][0] == 0:
                    gg += 1

            if gg > 0:
                for i in range(len(matrix)):
                    matrix[i][0] = 0

            return matrix

        n,m = len(matrix),len(matrix[0])
        flag,gflag = 0,0
        for i in range(n):
            for j in range(m):
                if matrix[i][j] == 0:
                    if i == 0:
                        flag = 1

                    else:
                        matrix[i][0] = 0

                    if j == 0:
                        gflag = 1

                    else:
                        matrix[0][j] = 0

        for i in range(1,n):
            if matrix[i][0] == 0:
                for j in range(1,m):
                    matrix[i][j] = 0

        for j in range(1,m):
            if matrix[0][j] == 0:
                for i in range(1,n):
                    matrix[i][j] = 0

        if flag:
            for i in range(m):
                matrix[0][i] = 0

        if gflag:
            for i in range(n):
                matrix[i][0] = 0

        return matrix


*  Pascal's Triangle


class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        n = numRows
        if n == 0:
            return []
        
        if n == 1:
            return [[1]]
        
        if n == 2:
            return [[1],[1,1]]
        
        l = [[1],[1,1]]
        for i in range(3,n+1):
            c = l[-1]
            o = [1]
            for j in range(len(c)-1):
                o.append(c[j]+c[j+1])
                
            o.append(1)
            l.append(o)
            
        return l


Note : If you want to find a row only , just write binomial coefficient of (x+y)^(r-1) where r is the row.





